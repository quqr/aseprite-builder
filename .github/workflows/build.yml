name: Build specified version
on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'the tag(version) of the Aseprite'
        required: true
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        build_type: [Release]
        enable_ui: [on]
        include:
          - os: windows-latest
            skia_zip: Skia-Windows-Release-x64.zip
            skia_dir: skia/out/Release-x64
            skia_lib: skia.lib
            libcrypto_url: https://github.com/feenkcom/libopenssl/releases/download/v0.5.0/crypto-x86_64-pc-windows-msvc.dll
            artifact_path: D:/a/${{ steps.get-content.outputs.repo-name }}/${{ steps.get-content.outputs.repo-name }}/build/bin/
          
          - os: ubuntu-latest
            skia_zip: Skia-Linux-Release-x64.zip
            skia_dir: skia/out/Static
            skia_lib: libskia.a
            libcrypto_url: https://libssl1.1_1.1.1w-0ubuntu1_amd64.deb  # 示例链接，需替换实际源
            artifact_path: /home/runner/work/${{ steps.get-content.outputs.repo-name }}/${{ steps.get-content.outputs.repo-name }}/build/bin/

    steps:
    - name: Get Release Body & Repo Name
      id: get-content
      shell: bash
      run: |
        body=$(curl -s https://api.github.com/repos/aseprite/aseprite/releases/tags/${{ github.event.inputs.tag_name }} | jq -r '.body')
        echo "body-content=$body" >> $GITHUB_OUTPUT
        GITHUB_REPOSITORY="${{ github.repository }}"
        REPO_NAME="${GITHUB_REPOSITORY#${{ github.repository_owner }}/}"
        echo "repo-name=$REPO_NAME" >> $GITHUB_OUTPUT

    - uses: actions/checkout@v3
      with:
        repository: 'aseprite/aseprite'
        submodules: 'recursive'
        ref: ${{ github.event.inputs.tag_name }}

    - name: Setup Ninja
      uses: seanmiddleditch/gha-setup-ninja@master
      if: matrix.os == 'windows-latest'

    - name: Install Linux Dependencies
      if: matrix.os == 'ubuntu-latest'
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-dev libxi-dev libxcursor-dev libxrandr-dev libxinerama-dev

    - name: Download Skia
      shell: bash
      run: |
        curl -L -o skia.zip https://github.com/aseprite/skia/releases/download/m102-861e4743af/${{ matrix.skia_zip }}
        unzip -q skia.zip -d skia

    - name: Generate Makefile
      shell: bash
      run: |
        cmake -S . -B build -G Ninja \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DENABLE_UI=${{ matrix.enable_ui }} \
          -DLAF_BACKEND=skia \
          -DSKIA_DIR=./skia \
          -DSKIA_LIBRARY_DIR=./${{ matrix.skia_dir }} \
          -DSKIA_LIBRARY=./${{ matrix.skia_dir }}/${{ matrix.skia_lib }}

    - name: Build
      shell: bash
      run: |
        cd build && ninja

    - name: Get Crypto Library
      if: matrix.os == 'windows-latest'
      shell: bash
      run: |
        curl -L -o ${{ matrix.artifact_path }}/libcrypto-1_1-x64.dll ${{ matrix.libcrypto_url }}

    - name: Package Artifacts
      shell: bash
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          7z a -tzip ${{ github.workspace }}/aseprite-${{ github.event.inputs.tag_name }}-${{ matrix.os }}.zip \
            ${{ matrix.artifact_path }}/data \
            ${{ matrix.artifact_path }}/aseprite.exe \
            ${{ matrix.artifact_path }}/libcrypto-1_1-x64.dll
        else
          zip -r ${{ github.workspace }}/aseprite-${{ github.event.inputs.tag_name }}-${{ matrix.os }}.zip \
            ${{ matrix.artifact_path }}/data \
            ${{ matrix.artifact_path }}/aseprite
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.tag_name }}
        name: Aseprite ${{ github.event.inputs.tag_name }}
        body: ${{ steps.get-content.outputs.body-content }}
        draft: true
        files: |
          ${{ github.workspace }}/aseprite-${{ github.event.inputs.tag_name }}*.zip
